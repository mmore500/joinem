name: joinem-ci

on:
  push:
    branches:
    - master
    tags:
      - '*'
  pull_request:
  schedule:
    - cron: '0 0 * * 1'  # weekly
  workflow_dispatch:
jobs:
  test:
    strategy:
      matrix:
        python-version: [3.9, "3.10", 3.11, 3.12, 3.13]
        os: [ubuntu-latest]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
    - name: Run smoke tests
      run: ./tests/test_smoke.sh

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
    - name: Run linting
      run: ./lint.sh

  docker-build:
    name: Docker Image Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Dockerfile
        uses: docker/build-push-action@v1
        with:
          push: false
          add_git_labels: true

  deploy-pypi:
    needs:
      - docker-build
      - test
      - lint
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools wheel twine
    - run: python setup.py sdist bdist_wheel
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

  deploy-ghcr:
    name: Docker Image Deploy
    needs:
      - test
      - lint
      - docker-build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2
      - name: Build and Push to GitHub Container Registry
        uses: docker/build-push-action@v1
        with:
          push: true
          tags: "latest,${{github.ref_name}}"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          repository: mmore500/joinem
          registry: ghcr.io
          add_git_labels: true
